plugins {
    id 'java'
    id 'net.minecraftforge.gradle.tweaker-client' version '581a86dcbe'
    id 'org.spongepowered.mixin' version '0.6-SNAPSHOT'
    id "io.freefair.lombok" version "6.0.0-m2"
}

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

version = "0.1.0"
group = "gandyclient"
archivesBaseName = "GandyClient"

def mixin_config = "mixins.gandyclient.json"
def tweaker = "GandyClient.launch.GandyClientTweaker"

minecraft {
    version = "1.8.9"
    tweakClass = tweaker
    mappings = "stable_22"
    runDir = 'run'
    clientJvmArgs = ["-XX:-DisableExplicitGC"]
    makeObfSourceJar = false
}

configurations {
    embed
    compile.extendsFrom(embed)
}

repositories {
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
    maven {
        name "spongepowered"
        url "https://repo.spongepowered.org/maven/"
    }
    maven {
        name = 'minecraft'
        url = 'https://libraries.minecraft.net/'
    }
    jcenter()
    mavenCentral()
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    annotationProcessor 'com.google.guava:guava:21.0'
    annotationProcessor 'org.apache.logging.log4j:log4j-core:2.0-beta9'
    annotationProcessor 'org.ow2.asm:asm-tree:6.2'
    annotationProcessor 'org.ow2.asm:asm-commons:6.2'
    annotationProcessor 'org.ow2.asm:asm-util:6.2'
    annotationProcessor 'com.google.code.gson:gson:2.2.4'
    annotationProcessor 'org.spongepowered:mixin:0.7.11-SNAPSHOT'

    embed 'org.slick2d:slick2d-core:1.0.2'
    embed('com.github.jagrosh:DiscordIPC:e29d6d8') {
        exclude module: 'log4j'
    }
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, "mixins.gandyclient.refmap.json"
}

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
}

jar {
    dependsOn configurations.compile
    manifest.attributes(
            "MixinConfigs": mixin_config,
            "TweakClass": tweaker,
            "TweakOrder": 0,
            "Manifest-Version": 1.0
    )
    configurations.embed.each(({ dep ->
        from(project.zipTree(dep)) {
            //exclude 'META-INF', 'META-INF/**'
            exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
        }
    }))
}